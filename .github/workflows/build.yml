name: Build Cheat

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: write-all

jobs:
  build:
    name: Build project
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      run: nuget restore .

    - name: Build
      run: msbuild -p:Configuration="Release" -p:Platform="x64"

    - name: Delete Existing Release
      id: delete_release
      uses: actions/github-script@v6
      with:
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          const tag = "x64";
    
          // List all releases and find the release by tag
          const releases = await github.rest.repos.listReleases({
            owner: owner,
            repo: repo,
          });
    
          const release = releases.data.find(release => release.tag_name === tag);
    
          // Check if the release exists and delete it
          if (release) {
            await github.rest.repos.deleteRelease({
              owner: owner,
              repo: repo,
              release_id: release.id,
            });
            console.log(`Deleted release with ID ${release.id}`);
          } else {
            console.log("No existing release to delete");
          }
    
          // Delete the tag
          try {
            await github.rest.git.deleteRef({
              owner: owner,
              repo: repo,
              ref: `tags/${tag}`,
            });
            console.log(`Deleted tag ${tag}`);
          } catch (error) {
            console.error(`Error deleting tag: ${error.message}`);
          }

    - name: Release
      id: release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: x64
        release_name: SCS2 Release

    - name: Upload PE
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ./x64/Release/scs2.exe
        asset_name: SCS2.exe
        asset_content_type: application/exe